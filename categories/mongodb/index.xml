<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mongodb on jsmeta</title>
    <link>http://jiangshanmeta.github.io/categories/mongodb/</link>
    <description>Recent content in Mongodb on jsmeta</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 27 May 2016 20:42:40 +0800</lastBuildDate>
    <atom:link href="http://jiangshanmeta.github.io/categories/mongodb/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>mongoDB的增删查改</title>
      <link>http://jiangshanmeta.github.io/post/mongodb/mongodbcrud/</link>
      <pubDate>Fri, 27 May 2016 20:42:40 +0800</pubDate>
      
      <guid>http://jiangshanmeta.github.io/post/mongodb/mongodbcrud/</guid>
      <description>

&lt;p&gt;mongoDB的增删查改&lt;/p&gt;

&lt;p&gt;##基本概念
mongoDB以document的形式存储数据，document类似于编程语言中的键值对的形式。document的集合成为collection，类似于一些数据库中表的概念。&lt;/p&gt;

&lt;p&gt;一下代码中均以users作为表名&lt;/p&gt;

&lt;p&gt;##插入数据&lt;/p&gt;

&lt;p&gt;####插入一条记录&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;db.users.insert({name:&#39;jsmeta&#39;,&#39;age&#39;:23})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;mongoDB的一个好处是自动生成_id,并且全局唯一。还有一个好处是有些字段可以没有值。&lt;/p&gt;

&lt;p&gt;再插入一条记录&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;db.users.insert({name:&#39;jsmeta2&#39;,gender:&#39;male&#39;})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在插入第一条记录时，已经有了 name 和 age两个字段名，如果是在mysql中，再插入一条信息除非设置默认值或者自增长，其他所有字段都要赋值，但是在mongodb中，并不需要都赋值，空着也可以。&lt;/p&gt;

&lt;p&gt;插完这两条记录数据库的结果是这样的：&lt;img src=&#34;http://jiangshanmeta.github.io/blogimg/insert0.jpg&#34; alt=&#34;insert&#34; /&gt;&lt;/p&gt;

&lt;p&gt;####插入多条数据&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;db.users.insert([{name:&#39;xiaoming&#39;,age:33,money:12345},{name:&#39;nobida&#39;,tech:[&#39;html&#39;,&#39;css&#39;,&#39;javascript&#39;]}]);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;与插入一条记录很类似，只是将记录用一个数组组合。&lt;/p&gt;

&lt;p&gt;从上面的代码可以看出，mongoDB可以存一个array，这就有点意思了。在mysql中，对于上面的信息，我们可能需要拆除一张表来表明一个人会的技能，但是在mongoDB里直接存一个array就好了，顿时感觉省事多了。&lt;/p&gt;

&lt;p&gt;##查找数据&lt;/p&gt;

&lt;p&gt;####查找全部的记录&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;db.users.find({})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;也可以简写成&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;db.users.find()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然而正常情况下是用不到把整张表都拿出来的&lt;/p&gt;

&lt;p&gt;####相等条件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;db.users.find({name:&#39;jsmeta&#39;})
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;常见运算符:e26229a1d4143975e4d61b9e4403a9c5&#34;&gt;常见运算符&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;db.users.find({age:{$gte:10,$lte:30}})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上面筛选的是用户年龄大于等于10且小于等于30的&lt;/p&gt;

&lt;p&gt;常见的运算符还有 $gt、$lt、$ne、$in、$nin&lt;/p&gt;

&lt;h4 id=&#34;or:e26229a1d4143975e4d61b9e4403a9c5&#34;&gt;or&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;db.users.find({$or:[{age:{$gte:10,$lte:30}},{gender:&#39;male&#39;}]})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上面的代码筛选出年龄大于等于10小于等于30或者性别为男的用户&lt;/p&gt;

&lt;h4 id=&#34;查询数组:e26229a1d4143975e4d61b9e4403a9c5&#34;&gt;查询数组&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;db.users.find({tech:&#39;html&#39;})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;tech字段存的是一个数组，上面的代码筛选出数组中含有&amp;rsquo;html&amp;rsquo;的document&lt;/p&gt;

&lt;p&gt;如果想限制的更严格一点，比如数组中第一个元素为&amp;rsquo;html&amp;rsquo;的，代码如下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;db.users.find({&#39;tech.0&#39;:&#39;html&#39;})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;mongoDB中存的array是一个有序array&lt;/p&gt;

&lt;h2 id=&#34;改数据:e26229a1d4143975e4d61b9e4403a9c5&#34;&gt;改数据&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;db.users.update({&#39;name&#39;:&#39;jsmeta&#39;},{$set:{age:55,gender:&#39;female&#39;,tech:[&#39;php&#39;,&#39;mongodb&#39;,&#39;javascript&#39;]}},{multi:true})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;第一个参数是筛选条件，第二个参数是含义是把 age设为55 把gender设为female 把tech设为[&amp;lsquo;php&amp;rsquo;,&amp;lsquo;mongodb&amp;rsquo;,&amp;lsquo;javascript&amp;rsquo;]，最后一个参数的意思是更新多条数据&lt;/p&gt;

&lt;h2 id=&#34;删除数据:e26229a1d4143975e4d61b9e4403a9c5&#34;&gt;删除数据&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;db.users.remove({age:33},1);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上面代码的意思是删除age字段值为33的记录，并且只删一条。第二参数可选，如果不传，则删除全部满足条件的数据&lt;/p&gt;

&lt;h2 id=&#34;limit与skip:e26229a1d4143975e4d61b9e4403a9c5&#34;&gt;limit与skip&lt;/h2&gt;

&lt;p&gt;limit和skip最常用于分页&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;db.users.find({}).limit(1).skip(1)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样跳过一条限制查询结果只有一条，得到的是第二条，对于写代码的明明是第一条&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>